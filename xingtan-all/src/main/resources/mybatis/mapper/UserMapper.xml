<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xingtan.account.mapper.UserMapper" >
    <resultMap id="UserMap" type="com.xingtan.account.entity.User" >
        <id column="id" property="id"/>
        <result column="user_name" property="userName"/>
        <result column="nick_name" property="nickName"/>
        <result column="real_name" property="realName"/>
        <result column="en_name" property="enName"/>
        <result column="telephone" property="telephone"/>
        <result column="email" property="email"/>
        <result column="password" property="password"/>
        <result column="from_source" property="fromSource" />
        <result column="created_user_id" property="createdUserId" />
        <result column="status" property="status" />
        <result column="gmt_create" property="gmtCreate"/>
        <result column="gmt_modified" property="gmtModified"/>
    </resultMap>

    <sql id="BASE_COLUMNS" >
        <![CDATA[id, user_name, real_name, nick_name, en_name, telephone, email, `password`, from_source, `status`,created_user_id ]]>
    </sql>
    <sql id="ALL_COLUMNS" >
        <![CDATA[id, user_name, real_name, nick_name, en_name, telephone, email, `password`, from_source, `status`, created_user_id, gmt_create, gmt_modified]]>
    </sql>

    <select id="getSimpleUserById" parameterType="java.lang.Long" resultMap="UserMap" >
        SELECT
        <include refid="BASE_COLUMNS" />
        FROM `user`
        WHERE id = #{id}
    </select>
    <select id="getUserById" parameterType="java.lang.Long" resultMap="UserMap" >
        SELECT
        <include refid="ALL_COLUMNS" />
        FROM `user`
        WHERE id = #{id}
    </select>
    <select id="getUsersByIds" parameterType="java.lang.Long" resultMap="UserMap" >
        SELECT
        <include refid="ALL_COLUMNS" />
        FROM `user`
        WHERE id in
        <foreach item="item" index="index" collection="ids" open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>
    <select id="getUserByUserName" parameterType="java.lang.String" resultMap="UserMap" >
        SELECT
        <include refid="ALL_COLUMNS" />
        FROM `user`
        WHERE user_name = #{userName}
    </select>
    <select id="getUserByPhone" parameterType="java.lang.String" resultMap="UserMap" >
        SELECT
        <include refid="ALL_COLUMNS" />
        FROM `user`
        WHERE `telephone` = #{telephone}
    </select>
    <select id="getUserByEmail" parameterType="java.lang.String" resultMap="UserMap" >
        SELECT
        <include refid="ALL_COLUMNS" />
        FROM `user`
        WHERE email = #{email}
    </select>
    <select id="getUserByIdCardNo" parameterType="java.lang.String" resultMap="UserMap" >
        SELECT
        <include refid="ALL_COLUMNS" />
        FROM `user`
        WHERE id_card_no = #{idCardNo}
    </select>
    <select id="getCounts" resultType="java.lang.Long">
        SELECT
        count(1) as num
        FROM `user`
    </select>
    <insert id="insertUser" useGeneratedKeys="true" keyProperty="id" parameterType="com.xingtan.account.entity.User" >
        INSERT INTO
        `user`
        (
        <if test="userName != null">user_name,</if>
        <if test="realName != null">real_name,</if>
        <if test="nickName != null">nick_name,</if>
        <if test="enName != null">en_name,</if>
        <if test="telephone != null">telephone,</if>
        <if test="email != null">email,</if>
        <if test="password != null">`password`,</if>
        <if test="fromSource != null">from_source,</if>
        <if test="createdUserId != null">created_user_id,</if>
        <if test="status != null">`status`,</if>
        gmt_create, gmt_modified)
        VALUES
        (
        <if test="userName != null">#{userName},</if>
        <if test="realName != null">#{realName},</if>
        <if test="nickName != null">#{nickName},</if>
        <if test="enName != null">#{enName},</if>
        <if test="telephone != null">#{telephone},</if>
        <if test="email != null">#{email},</if>
        <if test="password != null">#{password},</if>
        <if test="fromSource != null">#{fromSource},</if>
        <if test="createdUserId != null">#{createdUserId},</if>
        <if test="status != null">#{status},</if>
        NOW(), NOW())
    </insert>

    <update id="updateUser" parameterType="com.xingtan.account.entity.User" >
        UPDATE
        `user`
        SET
        <if test="userName != null">user_name = #{userName},</if>
        <if test="nickName != null">nick_name = #{nickName},</if>
        <if test="realName != null">real_name = #{realName},</if>
        <if test="enName != null">en_name = #{enName},</if>
        <if test="telephone != null">telephone = #{telephone},</if>
        <if test="email != null">email = #{email},</if>
        <if test="password != null">password = #{password},</if>
        <if test="status != null">status = #{status},</if>
        <if test="fromSource != null">from_source = #{fromSource},</if>
        <if test="createdUserId != null">created_user_id = #{createdUserId},</if>
        gmt_modified = now()
        WHERE
        id = #{id}
    </update>

    <delete id="deleteUser" parameterType="java.lang.Long" >
        DELETE FROM
        `user`
        WHERE
        id =#{id}
    </delete>

</mapper>